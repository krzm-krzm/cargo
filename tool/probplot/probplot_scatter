#!/usr/bin/env python3
""" Authors:
Juntao Hu <hujuntao@buaa.edu.cn>
James J. Pan <jamesjpan@outlook.com>
"""
import argparse
import matplotlib.path as mpath
import matplotlib.lines as mlines
import matplotlib.patches as patches
import matplotlib.pyplot as plt

def get_parser():
    p = argparse.ArgumentParser(description="RSP problems plotter")
    p.add_argument("rnet_file")
    p.add_argument("-i", "--input", metavar="PROB_FILE", help="problem instance")
    p.add_argument("-o", "--out", metavar="OUTPUT", help="output dest (default: a.png)", default="a.png")
    return p;

def probplot(args):
    node = {}
    edge = {}
    with open(args["rnet_file"]) as f_rnet:
        for line in f_rnet:
            col = line.strip().split()
            node[int(col[1])] = key = (float(col[3]),float(col[4]))
            node[int(col[2])] = val = (float(col[5]),float(col[6]))
            if key not in edge:
                edge[key] = []
            edge[key].append(val)

    fig_size = plt.rcParams["figure.figsize"]
    fig_size[0] = 8
    fig_size[1] = 8
    plt.rcParams["figure.figsize"] = fig_size
    fig, ax = plt.subplots()
    plt.axis('off')
    ax.axis('equal')
    ax.set_aspect(1.0)

    if args["input"]:
        with open(args["input"]) as f_prob:
            lines = f_prob.readlines()[6:] # skip header lines
            for line in lines:
                col = line.strip().split()
                o, d, q = int(col[1]), int(col[2]), int(col[3])
                if q > 0:
                    plt.plot(node[o][0], node[o][1], marker=",", color="#ff0000")
                    plt.plot(node[d][0], node[d][1], marker=",", color="#0000ff")

    fig.savefig(args["out"], bbox_inches="tight")
    plt.close(fig)

if __name__ == "__main__":
    probplot(vars(get_parser().parse_args()))

